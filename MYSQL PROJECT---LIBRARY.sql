CREATE DATABASE LIBRARY;
use library;

CREATE table BRANCH(
BRANCH_NO INT PRIMARY KEY, 
MANAGER_ID INT,
BRANCH_ADDRESS VARCHAR(30),
CONTACT_NO VARCHAR(10),
FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEE(EMP_ID));

select*from branch;

insert into branch values
(1,101,'malappuram','87632456'),
(2,102,'kochi',76554434),
(3,103,'calicut','98787563'),
(4,104,'perinthalmanna','97424567'),
(5,105,'hariyana','98378656'),
(6,106,'trivandrum','98541345'),
(7,107,'kannur','90825678'),
(8,108,'vayanad','90654323'),
(9,109,'trissur','9076543567'),
(10,110,'jaipur','903456278');

CREATE TABLE EMPLOYEE(
EMP_ID INT PRIMARY KEY,
EMP_NAME VARCHAR(30),
POSITION VARCHAR(30),
SALARY DECIMAL(10,2)
);
select*from employee;

alter table employee add column branch_no int,
add foreign key(branch_no)references branch(branch_no);

insert into employee values(102,'devid','marketing','300000');
insert into employee values(103,'richard','HR','400000');

insert into employee values(104,'DAIN','FINANCE','300000');
insert into employee values(105,'RAHUL','IT','400000');
insert into employee values(106,'SALIA','FINANCE','400000');
insert into employee values(107,'ALIA','IT','500000');
insert into employee values(108,'HAREESH','DATA ANALYST','600000');
insert into employee values(109,'NAVA','CUSTOMER SERVICE','400000');
insert into employee values(110,'SAJLA','SOFTWARE ENGINEER','600000');
update employee set branch_no=1 where emp_id=101;
update employee set branch_no=2 where emp_id=102;
update employee set branch_no=3 where emp_id =103;
update employee set branch_no=4 where emp_id=104;
update employee set branch_no=5 where emp_id=105;
update employee set branch_no=6 where emp_id=106;
update employee set branch_no=7 where emp_id=107;
update employee set branch_no=8 where emp_id=108;
update employee set branch_no=9 where emp_id=109;
update employee set branch_no=10 where emp_id=110;


CREATE TABLE CUSTOMER(CUSTUMER_ID INT PRIMARY KEY auto_increment,
CUSTOMER_NAME VARCHAR(30),
CUSTOMER_ADDRESS VARCHAR(30),
REG_DATE DATE);
INSERT INTO CUSTOMER VALUES(1,'RACHEL','KOLKATA','2022-03-07');
INSERT INTO CUSTOMER VALUES(2,'REENA','EDAVANNA','2023-01-02');
INSERT INTO CUSTOMER VALUES(3,'REHNA','PALAKKAD','2022-01-02');
INSERT INTO CUSTOMER VALUES(4,'HENZA','IDUKKI','2022-06-02');
INSERT INTO CUSTOMER VALUES(5,'LIYANA','IDUKKU','2021-01-02');
INSERT INTO CUSTOMER VALUES(6,'RAGHA','KANNUR','2022-09-02');
INSERT INTO CUSTOMER VALUES(7,'REHNA','PALAKKAD','2022-01-02');
INSERT INTO CUSTOMER VALUES(8,'ANAGHGA','ELIZABATH','2020-01-02');
INSERT INTO CUSTOMER VALUES(9,'MASHIDA','MALAPPURAM','2022-06-02');
INSERT INTO CUSTOMER VALUES(10,'THOYIBA','PALAKKAD','2022-01-09');
SELECT*FROM CUSTOMER;


CREATE TABLE BOOKS(ISBN VARCHAR(13) PRIMARY KEY,
BOOK_TITLE VARCHAR(30),
CATEGORY VARCHAR(30),
RENTAL_PRICE decimal(5,2),
STATUS VARCHAR(30),
AUTHOR VARCHAR(30),
PUBLISHER VARCHAR(30)
);
INSERT INTO BOOKS VALUES
('9780385545140','CROOK MANIFESTO','FICTION',20.00,'YES','COLOSON WHITEHEAD','DOUBLE DAY'),
('9867543678908','DESERT PROHETS','HISTORY',25.00,'YES','SARCH RETTEGER','LUCKY RINGWOOD');
INSERT INTO BOOKS VALUES
('0555677888','PRINCE TIDES','LITERARY FICTION',24.00,'NO','PAT CONORY','HOUGHTON MIFFLIN');
insert INTO BOOKS VALUES
('98766545','DEMON COPPERHEAD','GENERAL FICTION',34.00,'NO','BARBARA KINGSOLVER','HARPER'),
('877665454','THE LACUNA','HISTORICAL FICTION',33.00,'YES','BARBARA KINGSOLVER','HARPER'),
('6356376748','THE NIGHTINGALE','HISTORICAL FICTIPON',99.00,'NO','KRISTIN HANNAH','ST.MARTIN'),
('63556778776','HEART BORNS','GENERAL FICTION',55.00,'NO','COLLEEN HOOVER','ATRIA'),
('6545334455','REMINDERS OF HIM','ROMANCE',66.00,'YES','COLLEEN HOOVER','MONTALKE ROMANCE'),
('765453333','THE FIVE STAR WEEKEND','FAMILY AND FRIENDSHIP',44.00,'N0','ELIN HILDERBRAND','LITTLE BROWN'),
('63556377','GOLDEN GIRL','FRIENDSHIP',78.00,'YES','ELIN HILDERBRAND','LITTLE BVROWN');
select *FROM BOOKS;
SELECT*FROM CUSTOMER;

CREATE TABLE ISSUE_STATUS(
ISSUE_ID INT PRIMARY KEY,
ISSUED_CUST INT,
ISSUED_BOOK_NAME VARCHAR(30),
ISSUE_DATE DATE,
ISBN_BOOK VARCHAR(30),
FOREIGN KEY (ISSUED_CUST) REFERENCES CUSTOMER(CUSTUMER_ID),
foreign key(ISBN_BOOK) REFERENCES BOOKS(ISBN)
);
insert into ISSUE_STATUS values
(1,1,'CROOK MANIFESTO','2023-01-02','9780385545140'),
(2,2,'DESERT PROHETS','2022-09-09','9867543678908'),
(3,3,'PRINCE TIDES','2023-01-03','0555677888'),
(4,4,'DEMON COPPERHEAD','2021-09-08','98766545'),
(5,5,'THE LACUNA','2022-03-04','877665454'),
(6,6,'THE NIGHTINGALE','2022-09-06','6356376748'),
(7,7,'HEART BORNS','2023-05-05','63556778776'),
(8,8,'REMINDERS OF HIM','2023-01-02','6545334455'),
(9,9,'THE FIVE STAR WEEKEND','2021-09-07','765453333'),
(10,10,'GOLDEN GIRL','2023-01-3','63556377');
select*from issue_status;


CREATE TABLE RETURN_STATUS(
RETURN_ID INT PRIMARY KEY,
RETURN_CUST INT,
RETURN_BOOK_NAME VARCHAR(30),
RETURN_DATE DATE,
ISBN_BOOK2 varchar(30),
foreign key(RETURN_CUST) REFERENCES CUSTOMER(CUSTUMER_ID),
FOREIGN KEY (ISBN_BOOK2 ) REFERENCES BOOKS (ISBN)
);
INSERT INTO  RETURN_STATUS VALUES(1,1,'CROOK MANIFESTO','2023-01-02','9780385545140');

INSERT INTO RETURN_STATUS VALUES
(2,2,'DESERT PROHETS','2023-04-05','9867543678908'),
(3,3,'PRINCE TIDES','2023-04-06','0555677888'),
(4,4,'DEMON COPPERHEAD','2023-09-08','98766545'),
(5,5,'THE LACUNA','2023-03-04','877665454'),
(6,6,'THE NIGHTINGALE','2023-09-06','6356376748'),
(7,7,'HEART BORNS','2023-10-05','63556778776'),
(8,8,'REMINDERS OF HIM','2023-10-02','6545334455'),
(9,9,'THE FIVE STAR WEEKEND','2022-09-07','765453333'),
(10,10,'GOLDEN GIRL','2023-09-02','63556377');
select*FROM ISSUE_STATUS;

-- 1) RETRIEVE THE BOOK TITLE,CATEGORY,AND RENTAL PRICE OF ALL AVALIBLE BOOKS --
SELECT BOOK_TITLE, CATEGORY,RENTAL_PRICE FROM BOOKS WHERE STATUS ='YES';


-- 2)LIST THE EMPLOYEE NAMES AND THEIR RESPECTIVE SALARIES IN DESCENDING ORDER OF SALARY --
SELECT  EMP_NAME, SALARY
FROM EMPLOYEE
order by SALARY DESC;





-- 3) RETRIEVE THE BOOK TITLES AND THE CORRESP[ONDING CUSTOMERS WHO HAVE ISSUED THOSE BOOKS --
SELECT B.BOOK_TITLE, C.CUSTOMER_NAME
FROM ISSUE_STATUS i
join books b on i.isbn_book = b.isbn
join customer c on i.issued_cust = c.custumer_id;

-- 4)DISPLAY THE TOTAL COUNT OF BOOKS IN EACH CATEGORY--
SELECT CATEGORY ,COUNT(*) AS TOTAL_COUNT
FROM BOOKS
GROUP BY CATEGORY;

-- 5)RETRRIEVE THE EMPLOYEE NAMES AND THEIR POSITIONS FOR THE EMPLOYEES WHOSE SALARIES ARE ABOVE RS.50000--
SELECT EMP_NAME,position
FROM EMPLOYEE
WHERE SALARY>50000;

-- 6) LIST THE CUSTOMER NAMES WHO REGISTERD BEFORE 2022-01-01' AND HAVE NOT ISSUED ANY BOOKS YET--
SELECT CUSTOMER_NAME
FROM  CUSTOMER
WHERE REG_DATE < '2022-01-01'
AND  CUSTUMER_ID NOT IN (SELECT ISSUED_CUST FROM ISSUE_STATUS);

SELECT*FROM BRANCH;
select*from employee;

-- 7)DISPLAY THE BRANCH NUMBERS AND THE TOTAL COUNT OF EMPLOYEES IN EACH BRANCH--
SELECT branch_no,count(*) as employee_count
from employee
group by branch_no;

-- 8)display the names of customers who have issued books inthe month of january 2023--
select c.customer_name
from customer c
join issue_status i on c.custumer_id = i.issued_cust
where month(i.issue_date)=1 and year(i.issue_date)=2023;

-- retrieve book_title from book table containing history--
select book_title from books
where category= 'history';
-- 10) retrieve the branch numbers along with the count of employees for branches having more than 5 employees--
select branch_no, count(*) as employee_count
from employee
group by branch_no
having count(*) > 5;


















